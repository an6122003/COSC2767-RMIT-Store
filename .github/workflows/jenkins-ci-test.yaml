name: Jenkins CI BE

on:
  pull_request:
    branches:
      - main
    paths:
      - 'server/**'
  workflow_dispatch:

jobs:
  trigger-jenkins:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Jenkins Job
        id: trigger
        run: |
          # Define variables
          JOB_NAME="ASM2-Pipeline"
          JENKINS_URL="${{ secrets.JENKINS_URL }}"
          USER="${{ secrets.JENKINS_USER }}"
          API_TOKEN="${{ secrets.JENKINS_API_TOKEN }}"

          # Get Jenkins Crumb
          CRUMB=$(curl -s --user "${USER}:${API_TOKEN}" "${JENKINS_URL}/crumbIssuer/api/json" | jq -r '.crumb')

          # Trigger Jenkins job and get queue URL
          QUEUE_URL=$(curl -s -X POST "${JENKINS_URL}/job/${JOB_NAME}/build" \
            --user "${USER}:${API_TOKEN}" \
            -H "Jenkins-Crumb:${CRUMB}" \
            -H "Content-Type: application/json" \
            --data-urlencode "pr_number=${{ github.event.pull_request.number }}" \
            --data-urlencode "pr_branch=${{ github.head_ref }}" \
            --write-out "%{redirect_url}")

          echo "QUEUE_URL=${QUEUE_URL}"

      - name: Wait for Jenkins Job
        id: wait
        run: |
          JENKINS_URL="${{ secrets.JENKINS_URL }}"
          USER="${{ secrets.JENKINS_USER }}"
          API_TOKEN="${{ secrets.JENKINS_API_TOKEN }}"
          BUILD_STATUS=""
          TIMEOUT=60 # 1 minutes
          INTERVAL=15 # 10 seconds

          # Extract the build number
          QUEUE_ITEM=$(basename "$QUEUE_URL")
          echo "Queue item: $QUEUE_ITEM"

          # Wait for the job to start
          until [ "$BUILD_NUMBER" ]; do
            sleep "$INTERVAL"
            BUILD_NUMBER=$(curl -s "${JENKINS_URL}/queue/item/${QUEUE_ITEM}/api/json" \
              --user "${JENKINS_USER}:${JENKINS_API_TOKEN}" | jq -r '.executable.number // empty')
          done
          echo "BUILD_NUMBER=${BUILD_NUMBER}" >> $GITHUB_ENV

          # Check build status
          echo "Waiting for job to complete..."
          while [ "$BUILD_STATUS" != "SUCCESS" ] && [ "$BUILD_STATUS" != "FAILURE" ] && [ $TIMEOUT -gt 0 ]; do
            sleep "$INTERVAL"
            TIMEOUT=$((TIMEOUT - INTERVAL))
            BUILD_STATUS=$(curl -s "${JENKINS_URL}/job/${JOB_NAME}/${BUILD_NUMBER}/api/json" \
              --user "${JENKINS_USER}:${JENKINS_API_TOKEN}" | jq -r '.result // empty')
          done

          if [ "$BUILD_STATUS" = "SUCCESS" ]; then
            echo "Jenkins job succeeded!"
          elif [ "$BUILD_STATUS" = "FAILURE" ]; then
            echo "Jenkins job failed!" >&2
            exit 1
          else
            echo "Timeout waiting for Jenkins job!" >&2
            exit 1
          fi
